{"ast":null,"code":"var _jsxFileName = \"/Users/jeongminhyeong/Front-end Roadmap/Front-end-Roadmap-Study/9. React/nwitter by Nomad Coders/src/components/Nweet.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { dbService } from \"fbase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Nweet = ({\n  nweetObj,\n  isOwner\n}) => {\n  _s();\n\n  const [editing, setEditing] = useState(false); // editing 상태인지 아닌지\n\n  const [newNweet, setNewNweet] = useState(nweetObj.text); //input에 입력된 text 관련\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    console.log(ok);\n\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n    }\n  };\n\n  const toggleEditing = () => setEditing(prev => !prev);\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet\n    });\n    setEditing(false);\n  };\n\n  const onChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNewNweet(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: editing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isOwner !== null && isOwner !== void 0 ? isOwner : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Edit your nweet\",\n            value: newNweet,\n            required: true,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Update Nweet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleEditing,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: nweetObj.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), isOwner && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onDeleteClick,\n          children: \"Delete Nweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleEditing,\n          children: \"Edit Nweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Nweet, \"ZsFpsd+1jsV0959xbhQ2jq8vErk=\");\n\n_c = Nweet;\nexport default Nweet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nweet\");","map":{"version":3,"sources":["/Users/jeongminhyeong/Front-end Roadmap/Front-end-Roadmap-Study/9. React/nwitter by Nomad Coders/src/components/Nweet.jsx"],"names":["React","useState","dbService","Nweet","nweetObj","isOwner","editing","setEditing","newNweet","setNewNweet","text","onDeleteClick","ok","window","confirm","console","log","doc","id","delete","toggleEditing","prev","onSubmit","event","preventDefault","update","onChange","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,OAA1B;;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA2B;AAAA;;AACvC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC,CADuC,CACQ;;AAC/C,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAACG,QAAQ,CAACM,IAAV,CAAxC,CAFuC,CAEkB;;AACzD,QAAMC,aAAa,GAAG,YAAY;AAChC,UAAMC,EAAE,GAAGC,MAAM,CAACC,OAAP,CAAe,6CAAf,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ;;AACA,QAAIA,EAAJ,EAAQ;AACN,YAAMV,SAAS,CAACe,GAAV,CAAe,UAASb,QAAQ,CAACc,EAAG,EAApC,EAAuCC,MAAvC,EAAN;AACD;AACF,GAND;;AAOA,QAAMC,aAAa,GAAG,MAAMb,UAAU,CAAEc,IAAD,IAAU,CAACA,IAAZ,CAAtC;;AACA,QAAMC,QAAQ,GAAG,MAAOC,KAAP,IAAiB;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMtB,SAAS,CAACe,GAAV,CAAe,UAASb,QAAQ,CAACc,EAAG,EAApC,EAAuCO,MAAvC,CAA8C;AAClDf,MAAAA,IAAI,EAAEF;AAD4C,KAA9C,CAAN;AAGAD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAND;;AAOA,QAAMmB,QAAQ,GAAIH,KAAD,IAAW;AAC1B,UAAM;AACJI,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AADJ,QAEFL,KAFJ;AAGAd,IAAAA,WAAW,CAACmB,KAAD,CAAX;AACD,GALD;;AAMA,sBACE;AAAA,cACGtB,OAAO,gBACN;AAAA,gBACGD,OADH,aACGA,OADH,cACGA,OADH,gBAEI;AAAA,gCACE;AAAM,UAAA,QAAQ,EAAEiB,QAAhB;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,iBAFd;AAGE,YAAA,KAAK,EAAEd,QAHT;AAIE,YAAA,QAAQ,MAJV;AAKE,YAAA,QAAQ,EAAEkB;AALZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AAAQ,UAAA,OAAO,EAAEN,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAFJ,qBADM,gBAmBN;AAAA,8BACE;AAAA,kBAAKhB,QAAQ,CAACM;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,EAEGL,OAAO,iBACN;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAEM,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAES,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,sBAHJ;AAAA;AApBJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAzDD;;GAAMjB,K;;KAAAA,K;AA2DN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { dbService } from \"fbase\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false); // editing 상태인지 아닌지\n  const [newNweet, setNewNweet] = useState(nweetObj.text); //input에 입력된 text 관련\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    console.log(ok);\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div>\n      {editing ? (\n        <>\n          {isOwner ?? (\n            <>\n              <form onSubmit={onSubmit}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Edit your nweet\"\n                  value={newNweet}\n                  required\n                  onChange={onChange}\n                />\n                <input type=\"submit\" value=\"Update Nweet\" />\n              </form>\n              <button onClick={toggleEditing}>Cancel</button>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {isOwner && (\n            <>\n              <button onClick={onDeleteClick}>Delete Nweet</button>\n              <button onClick={toggleEditing}>Edit Nweet</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n"]},"metadata":{},"sourceType":"module"}