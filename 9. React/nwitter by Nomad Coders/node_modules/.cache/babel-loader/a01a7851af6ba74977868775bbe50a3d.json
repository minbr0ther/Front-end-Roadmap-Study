{"ast":null,"code":"var _jsxFileName = \"/Users/jeongminhyeong/Front-end Roadmap/Front-end-Roadmap-Study/9. React/nwitter by Nomad Coders/src/routes/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport Nweet from \"components/Nweet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = ({\n  userObj\n}) => {\n  _s();\n\n  const [nweet, setNweet] = useState(\"\");\n  const [nweets, setNweets] = useState([]);\n  const [attachment, setAttachment] = useState();\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot(snapshot => {\n      //snapshot은 listener 역할, Read-Delete-Update 알림\n      const nweetArray = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    await dbService.collection(\"nweets\").add({\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid\n    });\n    setNweet(\"\");\n  };\n\n  const onChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNweet(value);\n  };\n\n  const onFileChange = event => {\n    const {\n      target: {\n        files\n      }\n    } = event;\n    const theFile = files[0]; //파일을 무조건 1개 가져온다\n\n    const reader = new FileReader();\n\n    reader.onloadend = finishedEvent => {\n      const {\n        currentTarget: {\n          result\n        }\n      } = finishedEvent;\n      setAttachment(result);\n    };\n\n    reader.readAsDataURL(theFile);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: nweet,\n        onChange: onChange,\n        type: \"text\",\n        placeholder: \"What's on your mind?\",\n        maxLength: 120\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: onFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Nweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: attachment,\n        width: \"50px\",\n        height: \"50px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: nweets.map(nweet => /*#__PURE__*/_jsxDEV(Nweet, {\n        nweetObj: nweet,\n        isOwner: nweet.creatorId === userObj.uid\n      }, nweet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"js3UJwMu14bRxU9xKfPV+RqjXCw=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/jeongminhyeong/Front-end Roadmap/Front-end-Roadmap-Study/9. React/nwitter by Nomad Coders/src/routes/Home.jsx"],"names":["dbService","React","useEffect","useState","Nweet","Home","userObj","nweet","setNweet","nweets","setNweets","attachment","setAttachment","collection","onSnapshot","snapshot","nweetArray","docs","map","doc","id","data","onSubmit","event","preventDefault","add","text","createdAt","Date","now","creatorId","uid","onChange","target","value","onFileChange","files","theFile","reader","FileReader","onloadend","finishedEvent","currentTarget","result","readAsDataURL"],"mappings":"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","sourcesContent":["import { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport Nweet from \"components/Nweet\";\n\nconst Home = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [nweets, setNweets] = useState([]);\n  const [attachment, setAttachment] = useState();\n\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      //snapshot은 listener 역할, Read-Delete-Update 알림\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.collection(\"nweets\").add({\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n    });\n    setNweet(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0]; //파일을 무조건 1개 가져온다\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n        <input type=\"submit\" value=\"Nweet\" />\n        <img src={attachment} width=\"50px\" height=\"50px\" />\n      </form>\n      <div>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}